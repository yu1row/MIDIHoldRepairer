<Window x:Class="MIDIHoldRepairer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:l="clr-namespace:Gu.Wpf.Localization;assembly=Gu.Wpf.Localization"
        xmlns:local="clr-namespace:MIDIHoldRepairer"
        mc:Ignorable="d"
        Title="MIDI Hold Repairer" Height="600" Width="800" Closed="Window_Closed">
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open" Executed="CommandBinding_Open"/>
        <CommandBinding Command="ApplicationCommands.Close" Executed="CommandBinding_Close"/>
        <CommandBinding Command="ApplicationCommands.Save" Executed="CommandBinding_Save" CanExecute="CanSave"/>
        <CommandBinding Command="ApplicationCommands.SaveAs" Executed="CommandBinding_SaveAs" CanExecute="CanSave"/>
        <CommandBinding Command="ApplicationCommands.Help" Executed="CommandBinding_About"/>
        <CommandBinding Command="{x:Static local:MainWindow.RepairAllCommand}" Executed="CommandBinding_RepairAll" CanExecute="CanRepairAll" />
        <CommandBinding Command="{x:Static local:MainWindow.RepairSelectedCommand}" Executed="CommandBinding_RepairSelected" CanExecute="CanRepairSelected"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="{Binding Open}" Gesture="Ctrl+O"/>
    </Window.InputBindings>
    <DockPanel LastChildFill="True">

        <Menu DockPanel.Dock="Top" Height="20">
            <MenuItem Header="_File">
                <MenuItem x:Name="MenuItemOpen" Header="_Open..." Command="ApplicationCommands.Open" InputGestureText="Ctrl+O"/>
                <MenuItem x:Name="MenuItemSave" Header="_Save" Command="ApplicationCommands.Save" InputGestureText="Ctrl+S"/>
                <MenuItem x:Name="MenuItemSaveAs" Header="Save _As..." Command="ApplicationCommands.SaveAs"/>
                <Separator/>
                <MenuItem x:Name="MenuItemExit" Header="E_xit" Command="ApplicationCommands.Close" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="_Edit" Visibility="Collapsed">
                <MenuItem x:Name="MenuItemUndo" Header="_Undo" InputGestureText="Ctrl+Z"/>
                <MenuItem x:Name="MenuItemRedo" Header="_Redo" InputGestureText="Ctrl+Y"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem x:Name="MenuItemAbout" Header="_About" Command="ApplicationCommands.Help"/>
            </MenuItem>
        </Menu>

        <Grid Margin="10,10,10,10" DockPanel.Dock="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="9*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="9*"/>
            </Grid.ColumnDefinitions>
            <GroupBox Header="{DynamicResource FileInformationsGroupTitle}" Grid.ColumnSpan="2">
                <DockPanel LastChildFill="True">
                    <Label x:Name="label_filepath" Margin="10,10,0,0" DockPanel.Dock="Top"/>
                    <Label x:Name="label_fileinfo" Margin="15,0,0,0" DockPanel.Dock="Bottom"/>
                </DockPanel>
            </GroupBox>
            <DockPanel Grid.Row="1" LastChildFill="True">
                <Label Content="Tracks" DockPanel.Dock="Top"/>
                <ListBox x:Name="ListTracks" DockPanel.Dock="Bottom" SelectionChanged="ListTracks_SelectionChanged" />
            </DockPanel>
            <DockPanel Grid.Row="1" Grid.Column="1" LastChildFill="True" Margin="10,0,0,0">
                <Label Content="Hold(CC: 64) events" DockPanel.Dock="Top"/>
                <DockPanel Grid.Row="1" DockPanel.Dock="Bottom" LastChildFill="False" Margin="0,10,0,0">
                    <Button Content="Repair all" Command="{x:Static local:MainWindow.RepairAllCommand}" DockPanel.Dock="Right" Margin="10,0,0,0"/>
                    <Button Content="Repair selected" Command="{x:Static local:MainWindow.RepairSelectedCommand}" DockPanel.Dock="Right"/>
                </DockPanel>
                <DataGrid x:Name="DataGridHoldEvents" AutoGenerateColumns="False" IsReadOnly="True" DockPanel.Dock="Top" SelectionMode="Single" >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Time" IsReadOnly="True" Binding="{Binding Time}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsShortDiff}" Value="True">
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="On/Off" IsReadOnly="True" Binding="{Binding OnOff}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOn}" Value="True">
                                            <Setter Property="Foreground" Value="Blue" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOn}" Value="False">
                                            <Setter Property="Foreground" Value="Green" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Diff" IsReadOnly="True" Binding="{Binding TimeDiffDisp}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsShortDiff}" Value="True">
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOn}" Value="True">
                                            <Setter Property="Content" Value="" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Text" IsReadOnly="True" Binding="{Binding Text}" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </Grid>
    </DockPanel>
</Window>
